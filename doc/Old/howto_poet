POET stands for Photometry for Orbits, Eclipses, and Transits 
and it's implemented fully in python

The main functions are located in:
 /home/esp01/code/python/photpipe/poet/

Phase I consist of 4 independent steps, that should be run only after
the previous step has been run. Each steps saves the modified data, so
one can resume the analysis (changing parameter eventually) at any
level that has been previously ran:

1.- event.py       Initializes an event, load parameters and read the data.

2.- badpixels.py   Performs a light-travel time correction, calculates the 
                   phase, converts from surface brightness to flux and 
		   obtain a bad pixels mask.

3.- centering.py   Finds the center of the target and of the PSF.

4.- photometry.py  Performs aperture photometry on the data and in the PSF.



These steps make use of subroutines located in:
 /home/esp01/code/python/photpipe/lib/


To run, these routines require control files (.pcf) where the
parameter are defined (e.g. centering method, aperture size, resize,
etc.).
In: /home/esp01/code/python/photpipe/run/
you can find run.py that shows how to run the pipeline,
and also generic control files for each step.

At the end of each step, The results will be save to files named as
eventname_step.dat for the event variables or eventname_step.h5 for
the event data. The latter just up to centering, then only the event
variables are saved. e.g.:
event.py      --> eventname_ini.dat eventname_ini.h5
badpixels.py  --> eventname_bpm.dat eventname_bpm.h5
centering.py  --> eventname_ctr.dat eventname_ctr.h5
photometry.py --> eventname_pht.dat
...

Each step, will load this files produced by their precedent step
and start woking from that.


In-depth:

EVENT.PY:
 
Initializes the analysis of a new event, it requires a control file
named as: eventname.pcf

I use the routine .../lib/reader.py to read the controlfile.



BADPIXELS.PY:   Creates a badpixel image
e.g.:  badpix('wa018bs11_ini', 'badpix.pcf')

wa018bs11_ini is the name of the files saved in Event.py for the event
wa018bs11 (without the extentions)

badpix.pcf is the control file: currently badpixels wors always in the
same way so there are no branches, and actually the file badpix.pcf is
ignored



CENTERING.PY:  finds the center:
e.g.:  centering('wa018bs11_bpm', 'center.pcf')

From here the branching should start splitting for the different set-ups.

wa018bs11_bpm is the name of the files created in badpixels (without
the extention).

center.pcf is the control file. Currently these files don't have the
definitive format of the controlfile. you will see how the controlfile
varables are loaded to the event at the begining of .../poet/centering.py



PHOTOMETRY.PY:  calculates the aperture photometry:
e.g.:  photometry('wa018bs11_ctr', 'photom.pcf')

wa018bs11_ctr is the name of the files created in centering (without
the extention).

photom.pcf is the control file. Currently these files don't have the
definitive format of the controlfile. you will see how the controlfile
varables are loaded to the event at the begining of .../poet/photomerty.py

